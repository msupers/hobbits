<flow-definition plugin="workflow-job@2.33">
<actions>
<org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
<org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
<jobProperties/>
<triggers/>
<parameters/>
<options/>
</org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
</actions>
<description/>
<keepDependencies>false</keepDependencies>
<properties>
<hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.8"/>
<com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.12">
<gitLabConnection/>
</com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
<org.jenkinsci.plugins.gitlablogo.GitlabLogoProperty plugin="gitlab-logo@1.0.3">
<repositoryName/>
</org.jenkinsci.plugins.gitlablogo.GitlabLogoProperty>
<org.thoughtslive.jenkins.plugins.hubot.config.HubotJobProperty plugin="hubot-steps@2.0.4">
<siteNames/>
<enableNotifications>false</enableNotifications>
</org.thoughtslive.jenkins.plugins.hubot.config.HubotJobProperty>
</properties>
<definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.71">
<script>
pipeline{
		agent { docker 'registry.cmri.cn/zhcsep/dind-nodejs-maven:20190916' }
//		         environment {
 //                 def   gitGroup = 'zhcsdsj'
 //                 def   gitProject = 'backend-business'
  //                def   gitBranch = 'master'
  //                def   deployGroup = 'zhcsop'
  //                def   deployBranch = 'master'
 //                 def   deployProject = 'deploy'
   //              }
		stages {
			stage('Scm') {
                steps{
				    withCredentials([usernamePassword(credentialsId: 'git-token', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
				        sh "rm -rf {{.GitProject}};git clone http://zhangmiaoyjy:$PASSWORD@dev.cmri.cn/gitlab/{{.GitGroup}}/{{.GitProject}}.git"
				       }
				}
			}
			stage('sonar check') {
                steps{
                    dir("{{.GitProject}}"){
                    sh "mvn clean ; mvn compile"
                    sh 'mvn sonar:sonar \
                          -Dsonar.host.url=http://10.2.40.44:9000 \
                          -Dsonar.login=4de60cbde64da7376422c765afa1b99b3db75bfc'
                    }
                }
              }
         }
}
</script>
<sandbox>true</sandbox>
</definition>
<triggers/>
<disabled>false</disabled>
</flow-definition>